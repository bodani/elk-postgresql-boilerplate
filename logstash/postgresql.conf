#
# this config is use for version logstash 7.3.1
#

input {
  beats {
    port => 5044
  }

  #sdtin{
  #
  #}

}


# The filter part of this file is commented out to indicate that it
# is optional. 

# use csv plugin against pglog , pglog neet set log format to csv first.
filter {
  csv {
    columns => [
      "log_time",
      "user_name",
      "database_name",
      "process_id",
      "connection_from",
      "session_id",
      "session_line_num",
      "command_tag",
      "session_start_time",
      "virtual_transaction_id",
      "transaction_id",
      "error_severity",
      "sql_state_code",
      "message",
      "detail",
      "hint",
      "internal_query",
      "internal_query_pos",
      "context",
      "query",
      "query_pos",
      "location",
      "application_name"
    ]
  }
}

#
# different log type out put different log format
# 1. log duration log
# 2. norm log statment
# 3. checkpint log
# 4. other
filter {
 if [message] =~ /duration: [0-9]{1,8}[.]{0,1}[0-9]{1,5} ms/ {
     mutate {
         split => { "message" => "statement:" }
         add_field => {"duration" => "%{[message][0]}"}
         add_field => {"statement" => "%{[message][1]}"}
     }
    mutate { gsub => [ "duration", "duration: ", "" ] }
    mutate { gsub => [ "duration", " ms", "" ] }
    mutate { convert => { "duration" => "float" } }
    mutate { 
      add_field => {"sqltype" =>  "slowsql" }
      remove_field => "message"
   }
  } else if [message] =~ /statement: / {
    mutate { gsub => [ "message", "statement: ", "" ] }
    mutate { rename => {"message" => "statement"}}
    mutate {add_field => { "sqltype" => "statementsql" } } 
  } else if [message] =~ /checkpoint / {
    mutate {add_field => { "sqltype" => "checkpoint" } }
    mutate { rename => {"message" => "statement"}}
  } else{
    mutate {add_field => { "sqltype" => "other" } }
  }

  mutate { remove_field => [
    "connection_from",
    "session_line_num",
    "command_tag",
    "session_start_time",
    "virtual_transaction_id",
    "transaction_id",
    "error_severity",
    "sql_state_code",
    "detail",
    "hint",
    "internal_query",
    "internal_query_pos",
    "context",
    "query",
    "query_pos",
    "location",
    "application_name",
    "source",
    "input_type"
  ] }
}

output {
# file {
#   path => "/etc/logstash/pg.log" 
#   codec => line { format => "custom format: %{message}"}
# }

#   for debug 

#    stdout {
#        codec => rubydebug
#    } 


 elasticsearch {
   hosts => "localhost:9200"
   manage_template => false
   index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
 }
}
